!function(i,s){"function"==typeof define&&define.amd?define(["jquery"],s):"object"==typeof exports?module.exports=s(require("jquery")):i.SubscriptionsManager=s(i.jQuery)}(this,function(i){"use strict";var s=window.SubscriptionsManager,o=function t(s){this.dictionary={},this.subscriptions=[],this.settings=i.extend({},t.DEFAULT_SETTINGS,s)};return o.DEFAULT_SETTINGS={throwErrorOnFailedDisposal:!0},o.prototype.addSubscription=function(i,s){i!==!1&&(this.subscriptions.push(i),void 0!==s&&(this.dictionary[s]=i))},o.prototype.addSubscriptions=function(i){if(i!==!1){if(!i instanceof Array)throw Error("knockout-subscriptions-manager@addSubscriptions: Was expecting an array of subscriptions");return this.subscriptions=this.subscriptions.concat(i),this}},o.prototype.dispose=function(i){var s=this.dictionary[i];if(this.settings.throwErrorOnFailedDisposal&&(void 0===s||"function"!=typeof s.dispose))throw Error("knockout-subscriptions-manager@dispose: A valid listener with key "+i+" was not found.");s.dispose()},o.prototype.disposeAll=function(){for(var i in this.subscriptions){if(this.settings.throwErrorOnFailedDisposal&&"function"!=typeof this.subscriptions[i].dispose)throw Error("knockout-subscriptions-manager@disposeAll: Subscription was not disposal (had no dispose function)");this.subscriptions[i].dispose()}return this},o.noConflict=function(){return window.SubscriptionsManager=s,o},o});